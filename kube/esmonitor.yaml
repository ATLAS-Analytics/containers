apiVersion: extensions/v1beta1,
kind: Deployment,
metadata: {
  name: heapster,
  namespace: kube-system,
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/heapster,
  uid: 97ec3e9a-cfc9-11e7-a68f-0cc47a6a1e1e,
  resourceVersion: 18443622,
  generation: 13,
  creationTimestamp: 2017-11-22T21:10:40Z,
  labels: {
    addonmanager.kubernetes.io/mode: Reconcile,
    k8s-addon: monitoring-standalone.addons.k8s.io,
    k8s-app: heapster,
    kubernetes.io/cluster-service: true,
    version: v1.7.0
  },
  annotations: {
    deployment.kubernetes.io/revision: 9
  }
},
spec: {
  replicas: 1,
  selector: {
    matchLabels: {
      k8s-app: heapster,
      version: v1.7.0
    }
  },
  template: {
    metadata: {
      creationTimestamp: null,
      labels: {
        k8s-app: heapster,
        version: v1.7.0
      },
      annotations: {
        scheduler.alpha.kubernetes.io/critical-pod: 
      }
    },
    spec: {
      containers: [
        {
          name: heapster,
          image: gcr.io/google_containers/heapster:v1.4.0,
          command: [
            /heapster,
            --source=kubernetes.summary_api:'',
            --sink=elasticsearch:?nodes=atlas-kibana.mwt2.org:9200
          ],
          resources: {
            limits: {
              cpu: 89m,
              memory: 208Mi
            },
            requests: {
              cpu: 89m,
              memory: 208Mi
            }
          },
          livenessProbe: {
            httpGet: {
              path: /healthz,
              port: 8082,
              scheme: HTTP
            },
            initialDelaySeconds: 180,
            timeoutSeconds: 5,
            periodSeconds: 10,
            successThreshold: 1,
            failureThreshold: 3
          },
          terminationMessagePath: /dev/termination-log,
          terminationMessagePolicy: File,
          imagePullPolicy: IfNotPresent
        },
        {
          name: heapster-nanny,
          image: gcr.io/google_containers/addon-resizer:2.0,
          command: [
            /pod_nanny,
            --cpu=80m,
            --extra-cpu=0.5m,
            --memory=140Mi,
            --extra-memory=4Mi,
            --deployment=heapster,
            --container=heapster,
            --poll-period=300000
          ],
          env: [
            {
              name: MY_POD_NAME,
              valueFrom: {
                fieldRef: {
                  apiVersion: v1,
                  fieldPath: metadata.name
                }
              }
            },
            {
              name: MY_POD_NAMESPACE,
              valueFrom: {
                fieldRef: {
                  apiVersion: v1,
                  fieldPath: metadata.namespace
                }
              }
            }
          ],
          resources: {
            limits: {
              cpu: 50m,
              memory: 100Mi
            },
            requests: {
              cpu: 50m,
              memory: 100Mi
            }
          },
          terminationMessagePath: /dev/termination-log,
          terminationMessagePolicy: File,
          imagePullPolicy: IfNotPresent
        }
      ],
      restartPolicy: Always,
      terminationGracePeriodSeconds: 30,
      dnsPolicy: ClusterFirst,
      serviceAccountName: heapster,
      serviceAccount: heapster,
      securityContext: {},
      schedulerName: default-scheduler
    }
  },
  strategy: {
    type: RollingUpdate,
    rollingUpdate: {
      maxUnavailable: 1,
      maxSurge: 1
    }
  }
},
status: {
  observedGeneration: 13,
  unavailableReplicas: 1,
  conditions: [
    {
      type: Available,
      status: True,
      lastUpdateTime: 2017-11-22T22:14:38Z,
      lastTransitionTime: 2017-11-22T22:14:38Z,
      reason: MinimumReplicasAvailable,
      message: Deployment has minimum availability.
    }
  ],
  collisionCount: 1
}
